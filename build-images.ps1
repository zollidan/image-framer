$backendEnv = "./backend/.env"
$frontendEnv = "./frontend/.env"
$dockerEnv   = "./.env"

$envFiles = @($backendEnv, $frontendEnv, $dockerEnv)

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–æ–≤..."

$missing = @()
foreach ($file in $envFiles) {
    if (-Not (Test-Path -Path $file)) {
        $missing += $file
    }
}

if ($missing.Count -gt 0) {
    Write-Host "‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–∞–π–ª—ã:"
    $missing | ForEach-Object { Write-Host "   - $_" }
    exit 1
} else {
    Write-Host "‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ .env —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã."
}

$composeFile = "docker-compose.build-images.yml"
$composeCmd  = "docker-compose -f $composeFile build"

param(
    [switch]$Clean
)

if ($Clean) {
    $composeCmd += " --push --no-cache"
} else {
    $composeCmd += " --push"
}

Write-Host "üöÄ –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏: $composeCmd"
Invoke-Expression $composeCmd -ErrorAction Stop

if ($LASTEXITCODE -eq 0) {
    Write-Host "üéâ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
} else {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ. –ö–æ–¥: $LASTEXITCODE"
    exit $LASTEXITCODE
}
